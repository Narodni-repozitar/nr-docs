plugins:
  builder:
    disable:
      - script_sample_data
      - invenio_record_metadata_alembic_setup_cfg
  packages:
    - oarepo-model-builder-requests
    - oarepo-model-builder-drafts
    - oarepo-model-builder-multilingual
    - oarepo-model-builder-nr
    - oarepo-model-builder-relations
    - oarepo-model-builder-vocabularies
    - oarepo-model-builder-drafts-files
    - oarepo-model-builder-ui
    - oarepo-model-builder-files
    - oarepo-model-builder-cf
    - oarepo-model-builder-polymorphic
    - oarepo-model-builder-communities>=5.0.0
    - oarepo-model-builder-rdm
profiles:
  - record
  - draft
  - files
  - draft_files
record:
  extend: nr-documents#DocumentModel
  use:
    - ./documents-custom_fields.yaml
    - ./documents-facets.yaml
    - ./documents-harvest.yaml

  properties:
    state:
      type: keyword
      ui:
        marshmallow:
          field-class: common.services.schema.LocalizedStateField
    metadata: {}
    syntheticFields:
      properties: {}

  draft: {}
  draft-files:
    resource:
      base-classes: [oarepo_ui.resources.file_resource.S3RedirectFileResource]
    service-config:
      components:
        [
          "{{common.services.files.allowed_document_extensions.AllowedDocumentExtensionsComponent}}",
        ]

    permissions: # TODO: should be taken automatically from the record's permissions presets
      presets:
        - docs

  permissions:
    presets:
      - docs

  files:
    resource:
      base-classes: [oarepo_ui.resources.file_resource.S3RedirectFileResource]
    resource-config:
      base-html-url: /docs/
    properties:
      use:
        - ./documents-files.yaml
    use:
      - invenio_files

    permissions: # TODO: should be taken automatically from the record's permissions presets
      presets:
        - docs
    service-config:
      components:
        [
          "{{common.services.files.allowed_document_extensions.AllowedDocumentExtensionsComponent}}",
        ]

  module:
    qualified: documents
  pid:
    type: recid

  resource-config:
    base-html-url: /docs/
    base-url: /docs/

  service-config:
    base-classes:
      - oarepo_runtime.services.config.service.PermissionsPresetsConfigMixin
      - common.services.config.FilteredResultServiceConfig
    components:
      - "{{oarepo_vocabularies.authorities.components.AuthorityComponent}}"
      - "{{oarepo_runtime.services.components.DateIssuedComponent}}"
      - "{{oarepo_doi.services.components.DoiComponent}}"
      - "{{oarepo_oaipmh_harvester.components.OaiSectionComponent}}"

  json-serializer:
    base-classes:
      [common.services.filtered_json_ui_serializer.FilteredUIJSONSerializer]

  search-options:
    base-classes:
      - oarepo_runtime.services.search.I18nRDMSearchOptions
    sort-options-field: extra_sort_options
    fields:
      sort_options: "{{oarepo_runtime.services.search.ICUSortOptions}}('documents')"
  record:
    fields:
      sort: "{{common.services.sort.TitleICUSortField}}(source_field='metadata.title')"
      title_search: "{{oarepo_runtime.records.systemfields.icu.ICUSearchField}}(source_field='metadata.title')"
      creator_search: "{{oarepo_runtime.records.systemfields.icu.ICUSearchField}}(source_field='metadata.creators.fullName')"
      abstract_search: "{{oarepo_runtime.records.systemfields.icu.ICUSearchField}}(source_field='metadata.abstract.value')"

  ext:
    extra-code: |1
         def load_action_permissions(self, sender, identity):
             # TODO: need to have a deeper look at this
             from flask_principal import ActionNeed
             from invenio_access.models import ActionUsers

             user_id = identity.id
             if user_id is None:
                 return

             for au in ActionUsers.query.filter_by(user_id=user_id, exclude=False).all():
                 identity.provides.add(ActionNeed(au.action))

         def init_app_callback_identity_loaded(self, app):
             """Load action permissions into the identity when it is loaded."""

             from flask_principal import identity_loaded
             identity_loaded.connect_via(app)(self.load_action_permissions)

         def init_app_callback_facets_i18n(self, app):
             """Patch i18n in facets"""
             from invenio_rdm_records.records.systemfields.access.field.record import (
                 AccessStatusEnum,
             )
             from documents.services.records.facets import access_status
             from invenio_i18n import lazy_gettext as _
     
             access_status._value_labels = {
                 AccessStatusEnum.OPEN.value: _("access.status.open"),
                 AccessStatusEnum.EMBARGOED.value: _("access.status.embargoed"),
                 AccessStatusEnum.RESTRICTED.value: _("access.status.restricted"),
                 AccessStatusEnum.METADATA_ONLY.value: _("access.status.metadata-only"),
             }

  mapping:
    template:
      settings:
        index:
          query:
            default_field:
              - "title_search.*"
              - "creator_search.*"
              - "abstract_search.*"

runtime-dependencies:
  nr-metadata: 2.0.0
  nr-oaipmh-harvesters: 1.0.0
  nr-vocabularies: 2.0.8
  oarepo-published-service: 1.0.2

settings:
  i18n-languages:
    - cs
    - en
  supported-langs:
    cs:
      keyword:
        type: keyword
      text:
        analyzer: czech
    en:
      text: {}
